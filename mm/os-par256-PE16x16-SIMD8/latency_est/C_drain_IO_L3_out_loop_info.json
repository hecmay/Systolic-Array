{
	"module_name":	"C_drain_IO_L3_out",
	"module_prop":	{
		"double_buffer":	0,
		"in":	0
	},
	"loop":	{
		"loop_info":	{
			"iter":	"c0",
			"lb":	"0",
			"ub":	"15",
			"stride":	"1"
		},
		"child":	{
			"loop":	{
				"loop_info":	{
					"iter":	"c1",
					"lb":	"0",
					"ub":	"15",
					"stride":	"1"
				},
				"child":	{
					"mark":	{
						"mark_name":	"array",
						"child":	{
							"mark":	{
								"mark_name":	"io_L3",
								"child":	{
									"loop":	{
										"loop_info":	{
											"iter":	"c3",
											"lb":	"0",
											"ub":	"15",
											"stride":	"1"
										},
										"child":	{
											"mark":	{
												"mark_name":	"io_L2",
												"child":	{
													"loop":	{
														"loop_info":	{
															"iter":	"c4",
															"lb":	"0",
															"ub":	"15",
															"stride":	"1"
														},
														"child":	{
															"mark":	{
																"mark_name":	"io_L1",
																"child":	{
																	"loop":	{
																		"loop_info":	{
																			"iter":	"c5",
																			"lb":	"0",
																			"ub":	"15",
																			"stride":	"1"
																		},
																		"child":	{
																			"mark":	{
																				"mark_name":	"access_coalesce",
																				"child":	{
																					"mark":	{
																						"mark_name":	"access_serialize",
																						"child":	{
																							"loop":	{
																								"loop_info":	{
																									"iter":	"c6",
																									"lb":	"0",
																									"ub":	"3",
																									"stride":	"1"
																								},
																								"child":	{
																									"mark":	{
																										"mark_name":	"hls_pipeline",
																										"child":	{
																											"user":	{
																												"user_expr":	"out_trans_dram_serialize.fifo_C_drain_local.fifo_C_drain.0.4.4.6.64(c0, c1, 15, c3, c4, 256 * c0 + 16 * c4 + c5, 256 * c1 + 16 * c3 + 4 * c6)"
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}